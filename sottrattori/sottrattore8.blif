# SOTTRATTORE 8 BIT
#
# Esegue la sottrazione in complemento a 2 tra bit Ax e Bx.
# Sx e' il risultato
#
# > IGNORE e' sempre 1 e non e' utile nel risultato della sottrazione, 
# > serve per evitare warning di fanout (perche' i riporti dei sommatori sono inutilizzati)
#

.model sottrattore8
.inputs A7 A6 A5 A4 A3 A2 A1 A0 B7 B6 B5 B4 B3 B2 B1 B0
.outputs S7 S6 S5 S4 S3 S2 S1 S0 IGNORE

# Importa not e fulladder a 2 bit
.search not.blif
.search fulladder2.blif

# COSTANTE 0 E 1
.names NUM_0
.names NUM_1
1

# NEGA I BIT DI B
.subckt not A=B0 O=INV0
.subckt not A=B1 O=INV1
.subckt not A=B2 O=INV2
.subckt not A=B3 O=INV3
.subckt not A=B4 O=INV4
.subckt not A=B5 O=INV5
.subckt not A=B6 O=INV6
.subckt not A=B7 O=INV7

# SOMMA 1 AL NEGATO DI B:
# INVX ... INV3 INV2 INV1 INV0 + 0 ... 0 0 0 1 = COMP1_X ... COMP1_3 COMP1_2 COMP1_1 COMP1_0
.subckt fulladder2 A1=INV1 A0=INV0 B1=NUM_0 B0=NUM_1 CIN=NUM_0 O1=COMP1_1 O0=COMP1_0 COUT=COUT_COMP1_1
.subckt fulladder2 A1=INV3 A0=INV2 B1=NUM_0 B0=NUM_0 CIN=COUT_COMP1_1 O1=COMP1_3 O0=COMP1_2 COUT=COUT_COMP1_2
.subckt fulladder2 A1=INV5 A0=INV4 B1=NUM_0 B0=NUM_0 CIN=COUT_COMP1_2 O1=COMP1_5 O0=COMP1_4 COUT=COUT_COMP1_3
.subckt fulladder2 A1=INV7 A0=INV6 B1=NUM_0 B0=NUM_0 CIN=COUT_COMP1_3 O1=COMP1_7 O0=COMP1_6 COUT=IGNORE1

# SOMMA A E COMPLEMENTO 1 DI B:
# AX ... A3 A2 A1 A0 + COMP1_X COMP1_3 COMP1_2 COMP1_1 COMP1_0 = S3 S2 S1 S0
.subckt fulladder2 A1=A1 A0=A0 B1=COMP1_1 B0=COMP1_0 CIN=NUM_0 O1=S1 O0=S0 COUT=COUT1
.subckt fulladder2 A1=A3 A0=A2 B1=COMP1_3 B0=COMP1_2 CIN=COUT1 O1=S3 O0=S2 COUT=COUT2
.subckt fulladder2 A1=A5 A0=A4 B1=COMP1_5 B0=COMP1_4 CIN=COUT2 O1=S5 O0=S4 COUT=COUT3
.subckt fulladder2 A1=A7 A0=A6 B1=COMP1_7 B0=COMP1_6 CIN=COUT3 O1=S7 O0=S6 COUT=IGNORE2

# "usa" i cout per evitare il warning di fanout 
# (quando le uscite COUT dei sommatori non collegate a niente appare questo warning)
.names IGNORE1 IGNORE2 IGNORE
00 1
01 1
10 1
11 1

.end
